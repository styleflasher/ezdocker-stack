
## CUSTOM environment configuration - added into the container by Docker build

# this one comes from the docker-compose env vars, no need to hardcode it here
#export SSH_AUTH_SOCK=/ssh-agent

HISTCONTROL=ignoreboth

alias la='ls -A'
alias ll='ls -lhF'
alias lla='ls -lA'
alias l='ls -CF'

alias ez5cacheclear='php ezpublish/console cache:clear'
alias ez5installassets='php ezpublish/console assets:install --relative --symlink web'
alias fosjsdump='php ezpublish/console fos:js-routing:dump'
alias dumpassets='php ezpublish/console assetic:dump'

#bash function to run solr indexation with ezfind. 1st parameter must be admin siteaccess
alias indexsolrez5='function _indexsolr() {
php ezpublish/console ezpublish:legacy:script extension/ezfind/bin/php/updatesearchindexsolr.php --siteaccess=$1;
};_indexsolr'

#bash alias for composer to run composer without memory_limit
alias composer='php -d memory_limit=-1 /usr/local/bin/composer'

# smart eZ4 cache clear function
function ez4cacheclear()
{
    local is_ez4_dir=$(test $(ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    local has_ez4_instance_into_web=$(test $(cd web 2>/dev/null;ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    if $is_ez4_dir; then
        echo "Clearing eZ4 cache: php bin/php/ezcache.php $@"
        php bin/php/ezcache.php $@
    elif [ -d ezpublish_legacy ]; then
        echo "Clearing eZ4 legacy cache: php bin/php/ezcache.php $@"
        pushd ezpublish_legacy > /dev/null
        php bin/php/ezcache.php $@
        popd > /dev/null
    elif $has_ez4_instance_into_web; then
        echo "Clearing eZ4 web cache: php bin/php/ezcache.php $@"
        pushd web > /dev/null
        php bin/php/ezcache.php $@
        popd > /dev/null
    else
        echo "No eZ legacy instance found"
    fi
}
alias ez4cacheclearall='ez4cacheclear --clear-all'

# note: deactivated, as notify-send is only useful when a GUI is installed, and it comes with a thousand package dependencies
# Add an "alert" alias for long running commands.  Use like so: `sleep 10; alert`
#alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

if [ -f ~/.git-prompt.sh ]; then
  . ~/.git-prompt.sh
fi

GIT_CONFIGURED=$(git config --list | grep "user.email")
if [ "$GIT_CONFIGURED" == "" ]; then
    echo "Your git profile does not seem to be configured"
    echo "Please enter you user name (i.e. John Doe):"
    read LINE
    git config --global user.name "$LINE"
    echo "Please enter your email:"
    read LINE
    git config --global user.email "$LINE"
fi

PROMPT_U_COLOR='0;1;32m'
GIT_U_COLOR='0;1;36m'

# Custom prompt to display current git branch
PS1='${debian_chroot:+($debian_chroot)}\[\033[${PROMPT_U_COLOR}\]\u\[\033[0;37m\]@\h\[\033[00m\]:\[\033[0;37m\]\[\033[1;33m\]\w\[\033[${GIT_U_COLOR}\]$(__git_ps1)\[\033[00m\]\$ '

# Move to the most commonly used dir :-)
cd /var/www/
